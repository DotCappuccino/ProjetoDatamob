define(['dart_sdk', 'packages/firebase_core/firebase_core.dart', 'packages/cloud_firestore/cloud_firestore.dart'], (function load__packages__projetodatamob__screens__firestoreADM__firestoreMapeamento_dart(dart_sdk, packages__firebase_core__firebase_core$46dart, packages__cloud_firestore__cloud_firestore$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const firebase_core = packages__firebase_core__firebase_core$46dart.firebase_core;
  const cloud_firestore = packages__cloud_firestore__cloud_firestore$46dart.cloud_firestore;
  var firestoreMapeamento = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    SetOfint: () => (T.SetOfint = dart.constFn(core.Set$(core.int)))(),
    LinkedHashSetOfint: () => (T.LinkedHashSetOfint = dart.constFn(collection.LinkedHashSet$(core.int)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    QuerySnapshotOfObjectN: () => (T.QuerySnapshotOfObjectN = dart.constFn(cloud_firestore.QuerySnapshot$(T.ObjectN())))(),
    QuerySnapshotOfObjectNToSetOfint: () => (T.QuerySnapshotOfObjectNToSetOfint = dart.constFn(dart.fnType(T.SetOfint(), [T.QuerySnapshotOfObjectN()])))(),
    IdentityMapOfString$String: () => (T.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    voidTovoid: () => (T.voidTovoid = dart.constFn(dart.fnType(dart.void, [dart.void])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  firestoreMapeamento.mapearFireStore = function mapearFireStore() {
    firebase_core.Firebase.initializeApp();
    let dataBase = cloud_firestore.FirebaseFirestore.instance;
    core.print("Inicio aptUnidadesCollection !");
    firestoreMapeamento.aptUnidadesCollection(dataBase);
    core.print("Inicio aptColaboradoresCollection !");
    firestoreMapeamento.aptColaboradoresCollection(dataBase);
    core.print("Inicio aptFazendasCollection !");
    firestoreMapeamento.aptFazendasCollection(dataBase);
    core.print("Inicio aptTalhoesCollection !");
    firestoreMapeamento.aptTalhoesCollection(dataBase);
    core.print("Inicio aptMenusCollection !");
    firestoreMapeamento.aptMenusCollection(dataBase);
    core.print("Inicio aptModulosCollection !");
    firestoreMapeamento.aptModulosCollection(dataBase);
    core.print("Inicio aptPragasCollection !");
    firestoreMapeamento.aptPragasCollection(dataBase);
    core.print("Inicio aptModulosPragasCollection !");
    firestoreMapeamento.aptModulosPragasCollection(dataBase);
    core.print("Inicio aptItensCollection !");
    firestoreMapeamento.aptItensCollection(dataBase);
    core.print("Inicio aptItensPragasCollection !");
    firestoreMapeamento.aptItensPragasCollection(dataBase);
    core.print("Inicio aptValoresItensPragasCollection !");
    firestoreMapeamento.aptValoresItensPragasCollection(dataBase);
    core.print("Inicio aptUsuariosColCollection !");
    firestoreMapeamento.aptUsuariosColCollection(dataBase);
    core.print("Inicio aptUsuariosColModulosCollection !");
    firestoreMapeamento.aptUsuariosColModulosCollection(dataBase);
    core.print("Inicio aptAmostrasCollection !");
    firestoreMapeamento.aptAmostrasCollection(dataBase);
    core.print("Inicio aptDadosAmostrasCollection !");
    firestoreMapeamento.aptDadosAmostrasCollection(dataBase);
    core.print("Inicio aptAmostrasColaboradoresCollection !");
    firestoreMapeamento.aptAmostrasColaboradoresCollection(dataBase);
  };
  firestoreMapeamento.aptUnidadesCollection = function aptUnidadesCollection(dataBase) {
    return async.async(dart.void, function* aptUnidadesCollection() {
      let size = 0;
      let aptUnidades = dataBase.collection("APT_UNIDADES");
      yield aptUnidades.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptUnidades.doc().set(new (T.IdentityMapOfString$String()).from(["cod_unidade", "1", "des_unidade", "DataMob"])).then(dart.void, dart.fn(value => core.print("aptUnidades criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptUnidades | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptColaboradoresCollection = function aptColaboradoresCollection(dataBase) {
    return async.async(dart.void, function* aptColaboradoresCollection() {
      let size = 0;
      let aptColaboradores = dataBase.collection("APT_COLABORADORES");
      yield aptColaboradores.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptColaboradores.doc().set(new (T.IdentityMapOfString$String()).from(["cod_colaborador", "1", "nom_colaborador ", "Ricardo", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptColaboradores criado com sucesso!!"), T.voidTovoid()));
        aptColaboradores.doc().set(new (T.IdentityMapOfString$String()).from(["cod_colaborador", "2", "nom_colaborador ", "DataMob", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptColaboradores criado com sucesso!!"), T.voidTovoid()));
        aptColaboradores.doc().set(new (T.IdentityMapOfString$String()).from(["cod_colaborador", "3", "nom_colaborador ", "Maria Da Silva", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptColaboradores criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptColaboradores | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptFazendasCollection = function aptFazendasCollection(dataBase) {
    return async.async(dart.void, function* aptFazendasCollection() {
      let size = 0;
      let aptFazendas = dataBase.collection("APT_FAZENDAS");
      yield aptFazendas.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptFazendas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_fazenda", "1", "des_fazenda", "Fazenda Teste DataMob", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptFazendas criado com sucesso!!"), T.voidTovoid()));
        aptFazendas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_fazenda", "2", "des_fazenda", "Fazenda Santo Antônio", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptFazendas criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptFazendas | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptTalhoesCollection = function aptTalhoesCollection(dataBase) {
    return async.async(dart.void, function* aptTalhoesCollection() {
      let size = 0;
      let aptTalhoes = dataBase.collection("APT_TALHOES");
      yield aptTalhoes.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "1", "cod_talhao_02", "1", "cod_unidade", "1", "cod_fazenda", "1"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "2", "cod_talhao_02", "2", "cod_unidade", "1", "cod_fazenda", "1"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "2", "cod_talhao_02", "3", "cod_unidade", "1", "cod_fazenda", "1"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "3", "cod_talhao_02", "4", "cod_unidade", "1", "cod_fazenda", "1"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "1", "cod_talhao_02", "1", "cod_unidade", "1", "cod_fazenda", "2"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "2", "cod_talhao_02", "2", "cod_unidade", "1", "cod_fazenda", "2"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "2", "cod_talhao_02", "3", "cod_unidade", "1", "cod_fazenda", "2"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
        aptTalhoes.doc().set(new (T.IdentityMapOfString$String()).from(["cod_talhao_01", "3", "cod_talhao_02", "4", "cod_unidade", "1", "cod_fazenda", "2"])).then(dart.void, dart.fn(value => core.print("aptTalhoes criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptTalhoes | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptMenusCollection = function aptMenusCollection(dataBase) {
    return async.async(dart.void, function* aptMenusCollection() {
      let size = 0;
      let aptMenus = dataBase.collection("APT_MENUS");
      yield aptMenus.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "1", "des_menu", "Entomologia", "flg_modulo", "true", "nro_ordem", "1"])).then(dart.void, dart.fn(value => core.print("aptMenus (Entomologia) criado com sucesso!!"), T.voidTovoid()));
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "2", "des_menu", "Auditoria", "flg_modulo", "true", "nro_ordem", "2"])).then(dart.void, dart.fn(value => core.print("aptMenus (Auditoria) criado com sucesso!!"), T.voidTovoid()));
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "3", "des_menu", "Unidades", "flg_modulo", "false", "nro_ordem", "3"])).then(dart.void, dart.fn(value => core.print("aptMenus (Unidades) criado com sucesso!!"), T.voidTovoid()));
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "4", "des_menu", "Fazendas", "flg_modulo", "false", "nro_ordem", "4"])).then(dart.void, dart.fn(value => core.print("aptMenus (Fazendas) criado com sucesso!!"), T.voidTovoid()));
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "5", "des_menu", "Talhões", "flg_modulo", "false", "nro_ordem", "5"])).then(dart.void, dart.fn(value => core.print("aptMenus (Talhões) criado com sucesso!!"), T.voidTovoid()));
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "6", "des_menu", "Usuarios", "flg_modulo", "false", "nro_ordem", "6"])).then(dart.void, dart.fn(value => core.print("aptMenus (Usuarios) criado com sucesso!!"), T.voidTovoid()));
        aptMenus.doc().set(new (T.IdentityMapOfString$String()).from(["cod_menu", "7", "des_menu", "Menus", "flg_modulo", "false", "nro_ordem", "7"])).then(dart.void, dart.fn(value => core.print("aptMenus (Menus) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptMenus | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptModulosCollection = function aptModulosCollection(dataBase) {
    return async.async(dart.void, function* aptModulosCollection() {
      let size = 0;
      let aptModulos = dataBase.collection("APT_MODULOS");
      yield aptModulos.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "des_modulo", "Pragas de Solo", "flg_gps", "true", "flg_mapa", "true", "flg_foto", "true", "cod_menu", "1", "nro_ordem", "1"])).then(dart.void, dart.fn(value => core.print("aptModulos (Pragas de Solo) criado com sucesso!!"), T.voidTovoid()));
        aptModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "des_modulo", "Sphenophorus", "flg_gps", "true", "flg_mapa", "true", "flg_foto", "true", "cod_menu", "1", "nro_ordem", "2"])).then(dart.void, dart.fn(value => core.print("aptModulos (Sphenophorus) criado com sucesso!!"), T.voidTovoid()));
        aptModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "des_modulo", "Broca Gigante", "flg_gps", "true", "flg_mapa", "true", "flg_foto", "true", "cod_menu", "1", "nro_ordem", "3"])).then(dart.void, dart.fn(value => core.print("aptModulos (Broca Gigante) criado com sucesso!!"), T.voidTovoid()));
        aptModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "des_modulo", "Perdas", "flg_gps", "true", "flg_mapa", "true", "flg_foto", "true", "cod_menu", "2", "nro_ordem", "1"])).then(dart.void, dart.fn(value => core.print("aptModulos (Perdas) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptModulos | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptPragasCollection = function aptPragasCollection(dataBase) {
    return async.async(dart.void, function* aptPragasCollection() {
      let size = 0;
      let aptPragas = dataBase.collection("APT_PRAGAS");
      yield aptPragas.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "1", "des_praga", "Sphenophorus", "flg_apto_colaborador", "true", "flg_obri_colaborador", "true"])).then(dart.void, dart.fn(value => core.print("aptPragas (Broca Populacional) criado com sucesso!!"), T.voidTovoid()));
        aptPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "2", "des_praga", "Broca Gigante", "flg_apto_colaborador", "true", "flg_obri_colaborador", "false"])).then(dart.void, dart.fn(value => core.print("aptPragas (Broca Rev. Laboratorio) criado com sucesso!!"), T.voidTovoid()));
        aptPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "3", "des_praga", "Outras Pragas", "flg_apto_colaborador", "false", "flg_obri_colaborador", "false"])).then(dart.void, dart.fn(value => core.print("aptPragas (Broca Rev. Laboratorio) criado com sucesso!!"), T.voidTovoid()));
        aptPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "4", "des_praga", "Perdas", "flg_apto_colaborador", "false", "flg_obri_colaborador", "false"])).then(dart.void, dart.fn(value => core.print("aptPragas (Broca Rev. Laboratorio) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptPragas | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptModulosPragasCollection = function aptModulosPragasCollection(dataBase) {
    return async.async(dart.void, function* aptModulosPragasCollection() {
      let size = 0;
      let aptModulosPragas = dataBase.collection("APT_MODULOS_PRAGAS");
      yield aptModulosPragas.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptModulosPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "cod_praga", "1", "nro_ordem", "1", "flg_praga_opcional", "false"])).then(dart.void, dart.fn(value => core.print("aptModulosPragas criado com sucesso!!"), T.voidTovoid()));
        aptModulosPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "cod_praga", "3", "nro_ordem", "2", "flg_praga_opcional", "false"])).then(dart.void, dart.fn(value => core.print("aptModulosPragas criado com sucesso!!"), T.voidTovoid()));
        aptModulosPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "2", "cod_praga", "1", "nro_ordem", "1", "flg_praga_opcional", "false"])).then(dart.void, dart.fn(value => core.print("aptModulosPragas criado com sucesso!!"), T.voidTovoid()));
        aptModulosPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "3", "cod_praga", "2", "nro_ordem", "1", "flg_praga_opcional", "false"])).then(dart.void, dart.fn(value => core.print("aptModulosPragas criado com sucesso!!"), T.voidTovoid()));
        aptModulosPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "4", "cod_praga", "4", "nro_ordem", "1", "flg_praga_opcional", "false"])).then(dart.void, dart.fn(value => core.print("aptModulosPragas criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptModulosPragas | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptItensCollection = function aptItensCollection(dataBase) {
    return async.async(dart.void, function* aptItensCollection() {
      let size = 0;
      let aptItens = dataBase.collection("APT_ITENS");
      yield aptItens.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "1", "des_item", "Toco Total", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Toco Total) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "2", "des_item", "Toco Danificado", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Toco Danificado) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "3", "des_item", "Larvas", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Larvas) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "4", "des_item", "Pupas", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Pupas) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "5", "des_item", "Adultos", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Adultos) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "6", "des_item", "Hyponeuma Táutula", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Hyponeuma Táutula) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "7", "des_item", "Pão De Galinha", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Pão De Galinha) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "8", "des_item", "Larva Arame", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Larva Arame) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "9", "des_item", "Naopactus", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Naopactus) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "10", "des_item", "Pérola Da Terra", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Pérola Da Terra) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "11", "des_item", "Percevejo Castanho", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Percevejo Castanho) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "12", "des_item", "Crisonelideo", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Crisonelideo) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "13", "des_item", "Migdólus", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Migdólus) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "14", "des_item", "Tipo De Colheita", "tip_dado", "false", "qtd_decimal", "0"])).then(dart.void, dart.fn(value => core.print("aptItens (Tipo De Colheita) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "15", "des_item", "Toco Total (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Toco Total KG) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "16", "des_item", "Cana Inteira (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Cana Inteira KG) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "17", "des_item", "Cana Ponta (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Cana Ponta KG) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "18", "des_item", "Toletes (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Toletes KG) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "19", "des_item", "Estilhaço (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Estilhaço KG) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "20", "des_item", "Pedaço Fixo (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Pedaço Fixo KG) criado com sucesso!!"), T.voidTovoid()));
        aptItens.doc().set(new (T.IdentityMapOfString$String()).from(["cod_item", "21", "des_item", "Pedaço (KG)", "tip_dado", "false", "qtd_decimal", "2"])).then(dart.void, dart.fn(value => core.print("aptItens (Pedaço KG) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptItens | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptItensPragasCollection = function aptItensPragasCollection(dataBase) {
    return async.async(dart.void, function* aptItensPragasCollection() {
      let size = 0;
      let aptItensPragas = dataBase.collection("APT_ITENS_PRAGAS");
      yield aptItensPragas.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "1", "cod_item", "1", "flg_tipo", "L", "vlr_faixa_ini", "0.00", "vlr_faixa_fim", "100.00", "ord_exibicao", "1", "flg_codbarras", "false", "flg_mantervalor", "false", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (1) criado com sucesso!!"), T.voidTovoid()));
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "1", "cod_item", "2", "flg_tipo", "L", "vlr_faixa_ini", "0.00", "vlr_faixa_fim", "100.00", "ord_exibicao", "2", "flg_codbarras", "false", "flg_mantervalor", "false", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (2) criado com sucesso!!"), T.voidTovoid()));
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "1", "cod_item", "3", "flg_tipo", "L", "vlr_faixa_ini", "0.00", "vlr_faixa_fim", "100.00", "ord_exibicao", "3", "flg_codbarras", "false", "flg_mantervalor", "false", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (3) criado com sucesso!!"), T.voidTovoid()));
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "2", "cod_item", "4", "flg_tipo", "L", "vlr_faixa_ini", "0.00", "vlr_faixa_fim", "100.00", "ord_exibicao", "1", "flg_codbarras", "false", "flg_mantervalor", "false", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (4) criado com sucesso!!"), T.voidTovoid()));
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "2", "cod_item", "5", "flg_tipo", "L", "vlr_faixa_ini", "0.00", "vlr_faixa_fim", "100.00", "ord_exibicao", "2", "flg_codbarras", "false", "flg_mantervalor", "false", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (5) criado com sucesso!!"), T.voidTovoid()));
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "2", "cod_item", "6", "flg_tipo", "L", "vlr_faixa_ini", "0.00", "vlr_faixa_fim", "100.00", "ord_exibicao", "3", "flg_codbarras", "false", "flg_mantervalor", "false", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (6) criado com sucesso!!"), T.voidTovoid()));
        aptItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_praga", "4", "cod_item", "7", "flg_tipo", "T", "vlr_faixa_ini", "0", "vlr_faixa_fim", "0", "ord_exibicao", "1", "flg_codbarras", "false", "flg_mantervalor", "true", "flg_obrigatorio", "true", "flg_gps", "false"])).then(dart.void, dart.fn(value => core.print("aptItensPragas (7) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptItensPragas | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptValoresItensPragasCollection = function aptValoresItensPragasCollection(dataBase) {
    return async.async(dart.void, function* aptValoresItensPragasCollection() {
      let size = 0;
      let aptValoresItensPragas = dataBase.collection("APT_VALORES_ITENS_PRAGAS");
      yield aptValoresItensPragas.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptValoresItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_valor", "1", "cod_praga", "4", "cod_item", "7", "des_valor", "Mecânica Crua"])).then(dart.void, dart.fn(value => core.print("aptValoresItensPragas (1) criado com sucesso!!"), T.voidTovoid()));
        aptValoresItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_valor", "2", "cod_praga", "4", "cod_item", "7", "des_valor", "Mecânica Queimada"])).then(dart.void, dart.fn(value => core.print("aptValoresItensPragas (2) criado com sucesso!!"), T.voidTovoid()));
        aptValoresItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_valor", "3", "cod_praga", "4", "cod_item", "7", "des_valor", "Manual Crua"])).then(dart.void, dart.fn(value => core.print("aptValoresItensPragas (3) criado com sucesso!!"), T.voidTovoid()));
        aptValoresItensPragas.doc().set(new (T.IdentityMapOfString$String()).from(["cod_valor", "4", "cod_praga", "4", "cod_item", "7", "des_valor", "Manual Queimada"])).then(dart.void, dart.fn(value => core.print("aptValoresItensPragas (4) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptValoresItensPragas | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptUsuariosColCollection = function aptUsuariosColCollection(dataBase) {
    return async.async(dart.void, function* aptUsuariosColCollection() {
      let size = 0;
      let aptUsuariosCol = dataBase.collection("APT_USUARIOS_COL");
      yield aptUsuariosCol.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptUsuariosCol.doc().set(new (T.IdentityMapOfString$String()).from(["cod_usuario_col", "1", "nom_usuario", "ricardo", "sen_usuario", "1234", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosCol (ricardo) criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosCol.doc().set(new (T.IdentityMapOfString$String()).from(["cod_usuario_col", "2", "nom_usuario", "samuel", "sen_usuario", "1234", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosCol (samuel) criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosCol.doc().set(new (T.IdentityMapOfString$String()).from(["cod_usuario_col", "3", "nom_usuario", "datamob", "sen_usuario", "123456", "cod_unidade", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosCol (datamob) criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptUsuariosCol | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptUsuariosColModulosCollection = function aptUsuariosColModulosCollection(dataBase) {
    return async.async(dart.void, function* aptUsuariosColModulosCollection() {
      let size = 0;
      let aptUsuariosColModulos = dataBase.collection("APT_USUARIOS_COL_MODULOS");
      yield aptUsuariosColModulos.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "cod_usuario_col", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "2", "cod_usuario_col", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "3", "cod_usuario_col", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "4", "cod_usuario_col", "1"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "cod_usuario_col", "2"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "2", "cod_usuario_col", "2"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "3", "cod_usuario_col", "2"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "4", "cod_usuario_col", "2"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "1", "cod_usuario_col", "3"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
        aptUsuariosColModulos.doc().set(new (T.IdentityMapOfString$String()).from(["cod_modulo", "2", "cod_usuario_col", "3"])).then(dart.void, dart.fn(value => core.print("aptUsuariosColModulos criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptUsuariosColModulos | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptAmostrasCollection = function aptAmostrasCollection(dataBase) {
    return async.async(dart.void, function* aptAmostrasCollection() {
      let size = 0;
      let aptAmostras = dataBase.collection("APT_AMOSTRAS");
      yield aptAmostras.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptAmostras.doc().set(new (T.IdentityMapOfString$String()).from(["cod_valor", "", "cod_praga", "", "cod_item", "", "des_valor", ""])).then(dart.void, dart.fn(value => core.print("aptAmostras criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptAmostras | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptDadosAmostrasCollection = function aptDadosAmostrasCollection(dataBase) {
    return async.async(dart.void, function* aptDadosAmostrasCollection() {
      let size = 0;
      let aptDadosAmostras = dataBase.collection("APT_DADOS_AMOSTRAS");
      yield aptDadosAmostras.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptDadosAmostras.doc().set(new (T.IdentityMapOfString$String()).from(["id_amostra_col", "", "cod_unidade", "", "cod_usuario_col", "", "dta_apontamento", "", "cod_ponto", "", "cod_fazenda", "", "cod_talhao_01", "", "cod_talhao_02", "", "cod_modulo", "", "dta_coletor", "", "dta_gps", "", "vlr_lat", "", "vlr_lon", "", "flg_foto", ""])).then(dart.void, dart.fn(value => core.print("aptDadosAmostras criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptDadosAmostras | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  firestoreMapeamento.aptAmostrasColaboradoresCollection = function aptAmostrasColaboradoresCollection(dataBase) {
    return async.async(dart.void, function* aptAmostrasColaboradoresCollection() {
      let size = 0;
      let aptAmostrasColaboradores = dataBase.collection("APT_AMOSTRAS_COLABORADORES");
      yield aptAmostrasColaboradores.get().then(T.SetOfint(), dart.fn(querySnapshot => T.LinkedHashSetOfint().from([size = querySnapshot.size]), T.QuerySnapshotOfObjectNToSetOfint()));
      if (size <= 0 || size === null) {
        aptAmostrasColaboradores.doc().set(new (T.IdentityMapOfString$String()).from(["id_dado_amostra_col", "", "id_amostra_col", "", "cod_praga", "", "cod_item", "", "vlr_valor", "", "dta_gps", "", "vlr_lat", "", "vlr_lon", ""])).then(dart.void, dart.fn(value => core.print("aptAmostrasColaboradores criado com sucesso!!"), T.voidTovoid()));
      } else {
        core.print("aptAmostrasColaboradores | Quantida = " + dart.str(size) + " | Já existe !!");
      }
    });
  };
  dart.trackLibraries("packages/projetodatamob/screens/firestoreADM/firestoreMapeamento.dart", {
    "package:projetodatamob/screens/firestoreADM/firestoreMapeamento.dart": firestoreMapeamento
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["firestoreMapeamento.dart"],"names":[],"mappings":"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","file":"../../../../../../../../packages/projetodatamob/screens/firestoreADM/firestoreMapeamento.dart.lib.js"}');
  // Exports:
  return {
    screens__firestoreADM__firestoreMapeamento: firestoreMapeamento
  };
}));

//# sourceMappingURL=firestoreMapeamento.dart.lib.js.map
